<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>archives-2019 - Tag - 👨‍💻꿈꾸는 태태태의 공간</title><link>https://taetaetae.github.io/tags/archives-2019/</link><description>archives-2019 - Tag - 👨‍💻꿈꾸는 태태태의 공간</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 27 Oct 2019 13:51:16 +0000</lastBuildDate><atom:link href="https://taetaetae.github.io/tags/archives-2019/" rel="self" type="application/rss+xml"/><item><title>개발하기 바쁜데 글까지 쓰라고? (글쓰는 개발자가 되자.)</title><link>https://taetaetae.github.io/2019/10/27/a-reason-for-writing/</link><pubDate>Sun, 27 Oct 2019 13:51:16 +0000</pubDate><author>Author</author><guid>https://taetaetae.github.io/2019/10/27/a-reason-for-writing/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/a-reason-for-writing/idea.jpg" referrerpolicy="no-referrer">
            </div>신입시절. 배워야 할 것도 회사 업무도 많아 허우적대던 때가 있었다. 그렇게 하루에 3~4시간 자며 정신없이 하루를 보내던 날 문득 동기 형이 &ldquo;개발자는 기술 블로그를 해야 돼!&ldquo;라는 전혀 이해가 안 되는 말을 해온다. 이렇게 바빠 죽겠는데 블로그에 글까지 쓰라고? 말이 되는 소릴 하라며 반박하다 못내 이기는 척 하나 둘 글을 쓰기 시작했고, 다른 유명 블로거처럼 엄청나진 않지만 하루에 1,000~2,000명 정도 들어오며 점점 성장해 가는 나만의 기술 블로그가 되었다.
미약하지만 처음보다는 성장하고 있는 블로그 PV(Page View)" 미약하지만 처음보다는 성장하고 있는 블로그 PV(Page View)  또한 필자의 개발자 경력(?)을 돌이켜 보자면 기술 블로그를 하기 전과 하고 난 후로 나뉠 만큼 기술 블로그는 개인적으로 엄청난 영향력이 되었다.
 이 기회를 빌어 동기 형에게 감사의 인사를 전하고 싶다. 형. 보고 있죠? ;]
 이번 포스팅은 꼭 &ldquo;블로그를 하자&rdquo; 라기 보다 &ldquo;글을 왜 써야 하고 어떻게 써야 하는지&quot;에 대해 이야기해보고자 한다. 처음 이 글을 쓰려고 마음먹었을 땐 개발자라는 직군에 국한되지 않고 누구에게나 적용될 정도의 범용적인 글을 쓰려 했으나 &ldquo;S&quot;의 조언으로 독자(타깃)을 최대한 개발자에 맞춰 써보고자 한다. thanks to &ldquo;S&rdquo;
사실 조금만 검색을 해보면 특히 개발자에게 글쓰기가 얼마나 중요한지 찾아볼 수 있을 정도로 다양한 글들에서 &ldquo;개발자가 왜 글을 써야 하는가&quot;에 대한 내용이 언급이 되곤 했었다. 글을 쓰지 않던 개발자. 하지만 지금은 글쓰기가 정말 중요하다고 느끼며 적어도 2주에 하나 이상의 글을 쓰려는 현업 개발자의 시선에서 정리를 해보고자 한다. 그리고 마침 멘토링 해주고 있는 분께도 글 쓰는것에 대한 중요성을 알려주고 싶었고, 팀 내에도 공유를 하고 싶어 겸사겸사.
왜 글을 써야 할까? 비로소 내 것이 되기 위한 과정 프로그래밍 언어를 처음 배울때 꼭 만나는 문구 Hello World를 출력하시오. 이게 의미하는 의미가 무엇일까? 정말 새로운 세계를 알려주려 하는 것 일까?(그럴수도 있다&hellip;) 우리가 살아가며 &ldquo;배움&quot;이라는 과정은 대부분 비슷하겠지만 특히 IT 기술은 책을 다 읽었다든지, 동영상 강의를 다 들었다고 해서 내 것이 되었다고 말하기는 어려울 것 같다. 직접 키보드를 두드려 가며 거기서 얻을 수 있는 또 다른 &ldquo;인사이트&rdquo; 가 생길 수도 있기 때문이다.
다른 예로, 운영하던 시스템이나 서비스에서 장애를 맞았다고 가정해보자. 하지만 우리는 늘 그래왔듯 어떻게든 장애를 해결할 것이다. 이러한 상황에서 분명 &ldquo;문제의 원인&quot;이 있었을 테고 &ldquo;해결 과정&quot;이 있기 마련인데 이곳에서도 &ldquo;인사이트&quot;가 분명 있을 것이다.
이러한 &ldquo;인사이트&quot;를 글로 적다 보면 그냥 &ldquo;아~ 그렇구나, 그랬었지&rdquo; 하는 머릿속에서의 기억보다는 훨씬 더 오래 남을 것이고 혹여 글에서 정리를 잘못해 다른 사람들의 피드백이 있다면 더할 나위 없이 좋은 효과라고 생각이 된다. (이것이 바로 공유의 힘!)
더불어 글을 쓸 때 올바른 정보에 기반하여 쓰는 습관이 중요한데 그러다 보면 원래 쓰려고 했던 내용보다 더 깊게 알아가는 과정 속에서 또 다른 배움을 얻을 수 있는 반강제적 기회가 생길 수 있다. 누가 시키지 않았어도 배운 것에 대한 활용을 하고 싶은 생각이 들고 이를 또 글로 쓰고. 긍정적인 순환 속에 생겨나는 작은 발자국일지라도 성장해가는 자신을 느낄 수 있을 것이다.
몸이 기억하는 정리하는 습관 개발을 하다 보면 정말 간단한 &ldquo;CRUD&rdquo;(Create, Read, Update, Delete) 부터 시작해서 엄청나게 복잡한 도메인 지식에 기반하여 개발을 해야 하는 상황이 생긴다. 그럴 때면 머릿속으로 정리하는 것보다 그림이나 글을 써가면서 정리하는 게 좋다는 건 굳이 말하지 않아도 아는 사실. 글을 쓰다 보면 기승전결의 정리 방법과 목적이 무엇이고 근거가 무엇인지에 대해 구분하는 스킬이 늘어나는 것 같다.(적어도 필자는 기술 블로그를 운영하면서 정리하는 스킬이 그전보다 엄청나게 늘어났다고 자부한다.)
중국 속담중에 하나, 머릿속에 박혀 나오질 않는다.]]></description></item></channel></rss>