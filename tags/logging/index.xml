<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>logging - Tag - 👨‍💻꿈꾸는 태태태의 공간</title><link>https://taetaetae.github.io/tags/logging/</link><description>logging - Tag - 👨‍💻꿈꾸는 태태태의 공간</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 30 Jun 2019 18:39:47 +0000</lastBuildDate><atom:link href="https://taetaetae.github.io/tags/logging/" rel="self" type="application/rss+xml"/><item><title>Spring에서 Request를 우아하게 로깅하기</title><link>https://taetaetae.github.io/2019/06/30/controller-common-logging/</link><pubDate>Sun, 30 Jun 2019 18:39:47 +0000</pubDate><author>Author</author><guid>https://taetaetae.github.io/2019/06/30/controller-common-logging/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/controller-common-logging/spring_boot_logging.png" referrerpolicy="no-referrer">
            </div>스프링 기반의 웹 어플리케이션을 만들다 보면 요청을 처리하는데 맨 처음에 위치하고 있는 Controller(이하 컨트롤러)라는 레이어를 만들게 된다. 그럴때면 사용자가 어떤 요청(Request)을 하였는지에 대해 확인이 필요할 수 있다. 물론 확인을 안해도 무방하지만 가급적 로깅은 시스템 로직에 영향을 주지 않는 범위에서 최대한 다양하게 미리 해두는게 나중에 유지보수시 편할 수 있다. (예전 조직장님께서 말씀하신게 아직도 머릿속에 꽉 자리잡고 있다&hellip;) 아~주 일반적으로, 컨트롤러에서는 다음과 같이 메소드 단위로 파라미터를 직접 로깅하게 된다.
@Slf4j @RestController public class SampleController { @GetMapping(&#34;/test1&#34;) public String test1(@RequestParam String id) { log.]]></description></item></channel></rss>