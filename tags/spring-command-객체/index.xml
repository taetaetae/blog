<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>spring command 객체 - Tag - 👨‍💻꿈꾸는 태태태의 공간</title><link>https://taetaetae.github.io/tags/spring-command-%EA%B0%9D%EC%B2%B4/</link><description>spring command 객체 - Tag - 👨‍💻꿈꾸는 태태태의 공간</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 12 Mar 2017 18:03:01 +0000</lastBuildDate><atom:link href="https://taetaetae.github.io/tags/spring-command-%EA%B0%9D%EC%B2%B4/" rel="self" type="application/rss+xml"/><item><title>스프링환경에서의 파라미터 관련 정리</title><link>https://taetaetae.github.io/2017/03/12/spring-parameter/</link><pubDate>Sun, 12 Mar 2017 18:03:01 +0000</pubDate><author>Author</author><guid>https://taetaetae.github.io/2017/03/12/spring-parameter/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/spring-parameter/spring-parameter-1.jpg" referrerpolicy="no-referrer">
            </div>일반적인 웹 프로젝트 구성에서는 Controller레벨에서 응답을 받고 비지니스 로직을 처리 후에 다시 View레벨로 넘어가는게 통상적인 흐름이다. 이 부분에서 파라미터 관련한 여러가지 부분에 대해 정리해보고자 한다.
httpServletRequest.getParameter() 아래소스처럼 HttpServletRequest의 getParameter() 메서드를 이용하여 파라미터값을 가져올 수 있다.
@RequestMapping(&#34;/&#34;) public String home(HttpServletRequest httpServletRequest) { String id = httpServletRequest.getParameter(&#34;id&#34;); return &#34;home&#34;; } @RequestParam 또다른 방법으로는 @RequestParam 어노테이션을 이용하면 간단하게 파라미터값을 가져올수 있다. 우선, 해당 어노테이션의 옵션값들에 대해 간략하게 확인하고 넘어가는게 좋을듯 싶다. API문서 4.3.6 기준]]></description></item></channel></rss>