<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>date - Tag - 👨‍💻꿈꾸는 태태태의 공간</title><link>https://taetaetae.github.io/tags/date/</link><description>date - Tag - 👨‍💻꿈꾸는 태태태의 공간</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 23 Mar 2017 11:16:05 +0000</lastBuildDate><atom:link href="https://taetaetae.github.io/tags/date/" rel="self" type="application/rss+xml"/><item><title>Oracle + Mybatis 환경에서의 Date 다루기</title><link>https://taetaetae.github.io/2017/03/23/oracle-mybatis-date/</link><pubDate>Thu, 23 Mar 2017 11:16:05 +0000</pubDate><author>Author</author><guid>https://taetaetae.github.io/2017/03/23/oracle-mybatis-date/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/oracle-mybatis-date/oracle_mybatis_date.png" referrerpolicy="no-referrer">
            </div>상황  Oracle, Java 8, mybatis3 환경 Date컬럼에 데이터가 있는데 이를 select query로 조회하여 Model에 바인딩 시키고자 함.   쿼리에 아무 기능을 추가하지 않고 Date 형태로 Model에 바인딩을 하면 시분초가 없어진 2017-01-01 00:00:00 형태로 남게됨 그래서 아래처럼 쿼리 작성할 때마다 TO_CHAR를 사용해서 포맷에 맞추어 형변환을 시키고 Date 또는 String으로 Model에 바인딩 하곤 했음.  SELECT TO_CHAR(reg_ymdt, &#39;YYYY-MM-DD HH24:MI:SS&#39;) AS registDate FROM ...  이렇게 하다보니 query 만들때마다 형변환하는 쿼리를 만들어줘야하고, 자칫 포맷형식을 다르게 적으면 엉뚱한 결과를 초래하거나, Date형을 그대로 받아 사용해야하는 상황에서는 다시 형변환하는 과정(String to Date)을 해줘야만 함.]]></description></item><item><title>자바 8 Date</title><link>https://taetaetae.github.io/2017/01/10/java8-date/</link><pubDate>Tue, 10 Jan 2017 20:55:33 +0000</pubDate><author>Author</author><guid>https://taetaetae.github.io/2017/01/10/java8-date/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/java8-date/java_date.png" referrerpolicy="no-referrer">
            </div>이제까지 내 기억으로는 Date 관련 클래스를 아래처럼 점차 바꿔써온걸로 기억이 난다. java.util.Date &gt; java.util.Calendar &gt; org.joda.time 그런데 java 8 버전에서 기존에 있었던 문제들을 개선해서 나왔다고 한다. (네이버 HellowWorld 포스팅 참고) JSR-310 이라는 표준명세로.
지금부터는 JAVA 8 에서 제공하는 API로 날짜 연산을 어떻게 하는지에 대해 알아보고자 한다. (물론 수많은 날짜 연산 방법을이 있지만 자주 쓰이는 부분들 위주로 정리해보자.)
 Date &gt; String (format)  LocalDateTime.now().format(DateTimeFormatter.ofPattern(&#34;yyyy-MM-dd&#34;));  String &gt; Date (format)  LocalDateTime.]]></description></item></channel></rss>