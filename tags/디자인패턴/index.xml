<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>디자인패턴 - Tag - 👨‍💻꿈꾸는 태태태의 공간</title><link>https://taetaetae.github.io/tags/%EB%94%94%EC%9E%90%EC%9D%B8%ED%8C%A8%ED%84%B4/</link><description>디자인패턴 - Tag - 👨‍💻꿈꾸는 태태태의 공간</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 06 Oct 2016 17:03:48 +0000</lastBuildDate><atom:link href="https://taetaetae.github.io/tags/%EB%94%94%EC%9E%90%EC%9D%B8%ED%8C%A8%ED%84%B4/" rel="self" type="application/rss+xml"/><item><title>디자인패턴-싱글톤</title><link>https://taetaetae.github.io/2016/10/06/20161006/</link><pubDate>Thu, 06 Oct 2016 17:03:48 +0000</pubDate><author>Author</author><guid>https://taetaetae.github.io/2016/10/06/20161006/</guid><description>&lt;div class="featured-image">
&lt;img src="/images/20161006/designpatterns.jpg" referrerpolicy="no-referrer">
&lt;/div>디자인 패턴중에 가장 잘 알려진 싱글톤 에 대해서 알아보고자 한다. 멀티 스레드 환경에서 자주 이용되는 패턴이라고만 들었는데 이번 기회를 통해 제대로 정리해보자
싱글톤이 무엇인가 싱글톤(Singleton)은 정확히 하나의 인스턴스만 생성되는 클래스이다.
라고 이펙티브 자바에서 정의되어있다. 즉, 딱 하나만 생성하고 이를 여기저기서 사용하는 패턴이라 생각하면 될듯 하다. 싱글 스레드 환경에서는 당연히 인스턴스를 공유할 상황이 없겠지만 대부분 멀티 스레드 환경이기 때문에 싱글톤 패턴은 아주 중요한 부분이다.
아주 고전적인 방법 (위험한 방법) public class Singleton { private static Singleton uniqueInstance; private Singleton(){} public static Singleton getInstance(){ if (uniqueInstance == null){ uniqueInstance = new Singleton(); } return uniqueInstance; } } 위와 같은 상황에서 if절을 도달하는 시점이 각 스레드마다 다를경우 문제가 발생할 수 있다.</description></item></channel></rss>