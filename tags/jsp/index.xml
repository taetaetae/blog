<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>jsp - Tag - 👨‍💻꿈꾸는 태태태의 공간</title><link>https://taetaetae.github.io/tags/jsp/</link><description>jsp - Tag - 👨‍💻꿈꾸는 태태태의 공간</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 04 Jan 2017 18:36:17 +0000</lastBuildDate><atom:link href="https://taetaetae.github.io/tags/jsp/" rel="self" type="application/rss+xml"/><item><title>jsp include</title><link>https://taetaetae.github.io/2017/01/04/20170104/</link><pubDate>Wed, 04 Jan 2017 18:36:17 +0000</pubDate><author>Author</author><guid>https://taetaetae.github.io/2017/01/04/20170104/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/20170104/jsp.png" referrerpolicy="no-referrer">
            </div>1. 디렉티브방식 &lt;%@ include file=&quot;~~&quot;%&gt;  정적 include 방식, 인클루드 되는 내용이 단순하게 텍스트로 포함되어 컴파일이 된다. (복사된다는 느낌)   주의할점은 비록 포함되는 페이지라 하더라도 한글을 제대로 처리하기 위해서는 포함되어지는 jsp파일 상단에 인코딩 명시를 해줘야 한다. 포함되어지는 jsp 내용이 변경이 될 경우 해당 jsp를 사용하는 jsp를 강제로 변경(touch) 해줘서 다시 컴파일이 되게 해야하는 불편함이 있다. 정적 방식이기 때문에 예로들어 전역변수를 인클루드 되는 jsp에서 지정하게 되면 상위jsp에서 사용이 가능하게 된다.  2. 액션태그 방식 &lt;jsp:include page=&quot;~~&quot;/&gt;  동적 include 방식, 포함하는 문서와 상관없이 동적으로 컴파일 된다. (완전히 별도로 동작하기 때문에 변수를 동시에 사용하려면 따로 파라미터로 넘겨줘야 한다.) flush 옵션은 요청흐름이 넘어가면서 현재까지 페이지의 결과를 출력할 것인지 말것인지를 결정하는것이다. 일반적으로 false로 설정한다. &lt;jsp:param&gt;를 이용하여 파라미터를 전송할수 있다.  &lt;jsp:include page=&quot;...&quot; flush=&quot;false&quot;&gt; &lt;jsp:param name=&quot;name&quot; value=&quot;이름&quot; /&gt; &lt;jsp:param name=&quot;pageName&quot; value=&quot;페이지이름&quot;/&gt; &lt;/jsp:include&gt; 3. JSTL 방식 &lt;c:import url=&quot;~~&quot; /&gt;  JSTL(JSP Standard Tag Library) 태그중의 하나 컴파일 되고 동작하는 방식은 액션태그&lt;jsp:include page=&quot;~~&quot;/&gt;와 같음 현재 컨테이너 안에 있는 자원외에 다른 외부 자원도 포함이 가능하다.  &lt;c:import url=&quot;http://www.google.com/&quot;/&gt;  아래와 같이 보다 더 다양한 옵션이 제공된다  &lt;c:import! url=&quot;읽어올 URL&quot; var=&quot;읽어올 데이터를 저장할 변수명&quot; scope=&quot;변수의 공유 범위&quot; varReader=&quot;리소스의 내용을 Reader 객체로 읽어올 때 사용&quot; charEncoding=&quot;읽어온 데이터의 캐릭터셋 지정&quot; /&gt; ]]></description></item></channel></rss>