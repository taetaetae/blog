<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>archives-2016 - Tag - 👨‍💻꿈꾸는 태태태의 공간</title><link>https://taetaetae.github.io/tags/archives-2016/</link><description>archives-2016 - Tag - 👨‍💻꿈꾸는 태태태의 공간</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 31 Dec 2016 16:59:43 +0000</lastBuildDate><atom:link href="https://taetaetae.github.io/tags/archives-2016/" rel="self" type="application/rss+xml"/><item><title>2016 회고</title><link>https://taetaetae.github.io/2016/12/31/adieu-2016/</link><pubDate>Sat, 31 Dec 2016 16:59:43 +0000</pubDate><author>Author</author><guid>https://taetaetae.github.io/2016/12/31/adieu-2016/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/adieu-2016/2016.png" referrerpolicy="no-referrer">
            </div>2016년, 내겐 정말 수많은 일들이 있었고 그 어느때보다 (전역 후로) 미친듯이 회사에 집중했던 시간들로 기억난다. 무작정 다가오는 새해를 맞이하는것도 좋지만 올 한해를 되돌아보는 시간을 갖고, 나를 다시 점검해보는 차원에서 일명 &lsquo;회고&rsquo;를 해볼까 한다.
회사 정말 열심히 했다. 잘했는지는&hellip; 잘 모르겠다. 난 잘한것 같다. 물론 내 하루중에 가장많은 시간을 쏟은것도 있지만 작년에 많이 하지 못하던것을 &lsquo;날씨&rsquo;라는 서비스를 홀로 맡으면서 정말 많은것을 배우고 결과물도 후회하지 않을만큼 나온것 같다. 지나고보면 구지 하지 않아도 월급은 똑같이 나올테고, 시키지도 않았는데 그시간에 잠을 더 잤으면 하는 생각도 들지만 후회하지 않는다.]]></description></item><item><title>Spring Transaction 옵션</title><link>https://taetaetae.github.io/2016/10/08/20161008/</link><pubDate>Sat, 08 Oct 2016 18:04:19 +0000</pubDate><author>Author</author><guid>https://taetaetae.github.io/2016/10/08/20161008/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/20161008/spring.png" referrerpolicy="no-referrer">
            </div>상황 스프링 환경에서 일반적으로 DAO 나 BO 레벨에서 다음과 같이 코딩을 하게 된다.
@Transactional(isolation = Isolation.READ_COMMITTED, propagation = Propagation.REQUIRED, rollbackFor = Exception.class) public int method(int i) throws Exception { return sqlMapClient.delete(&#34;~~~~&#34;); } 무분별하게 Ctrl+C,V 신공으로 트랜잭션 어노테이션을 가져다가 사용할수도 있겠으나, 각 값들이 어떤 역활을 아는지에 대해 알고 넘어갈 필요성이 있다.
@Transactional 우선 해당 어노테이션을 적용하면 적용된 클래스 또는 메소드에 트랜잭션이 적용된다. 따라서 로직 흐름에 맞추어 전체적으로 트랜잭션을 적용할것인지, 아니면 특정 메소드에 적용할것인지 전략을 잘 세워야 한다.]]></description></item><item><title>디자인패턴-싱글톤</title><link>https://taetaetae.github.io/2016/10/06/20161006/</link><pubDate>Thu, 06 Oct 2016 17:03:48 +0000</pubDate><author>Author</author><guid>https://taetaetae.github.io/2016/10/06/20161006/</guid><description>&lt;div class="featured-image">
&lt;img src="/images/20161006/designpatterns.jpg" referrerpolicy="no-referrer">
&lt;/div>디자인 패턴중에 가장 잘 알려진 싱글톤 에 대해서 알아보고자 한다. 멀티 스레드 환경에서 자주 이용되는 패턴이라고만 들었는데 이번 기회를 통해 제대로 정리해보자
싱글톤이 무엇인가 싱글톤(Singleton)은 정확히 하나의 인스턴스만 생성되는 클래스이다.
라고 이펙티브 자바에서 정의되어있다. 즉, 딱 하나만 생성하고 이를 여기저기서 사용하는 패턴이라 생각하면 될듯 하다. 싱글 스레드 환경에서는 당연히 인스턴스를 공유할 상황이 없겠지만 대부분 멀티 스레드 환경이기 때문에 싱글톤 패턴은 아주 중요한 부분이다.
아주 고전적인 방법 (위험한 방법) public class Singleton { private static Singleton uniqueInstance; private Singleton(){} public static Singleton getInstance(){ if (uniqueInstance == null){ uniqueInstance = new Singleton(); } return uniqueInstance; } } 위와 같은 상황에서 if절을 도달하는 시점이 각 스레드마다 다를경우 문제가 발생할 수 있다.</description></item><item><title>hexo 환경 구축하기</title><link>https://taetaetae.github.io/2016/09/23/20160923/</link><pubDate>Fri, 23 Sep 2016 10:26:53 +0000</pubDate><author>Author</author><guid>https://taetaetae.github.io/2016/09/23/20160923/</guid><description>&lt;div class="featured-image">
&lt;img src="/images/20160923/hexo_github.jpg" referrerpolicy="no-referrer">
&lt;/div>개요 이전포스팅 에서 이야기 한것과 같이 어느곳에서든지(집 또는 회사 등) 블로그 포스팅을 할수 있는 환경을 만들고 싶었다. (git을 이용해서.) 그래서 git repository 를 두개를 만들었고, 하나는 실제 블로그서버로 이용하고 하나는 블로그를 포스팅하는 hexo 환경을 저장하게 된다. 지금부터 이야기 할 내용은 hexo환경을 git repository 에서 pull 받아서 환경구성하는 부분을 이야기 하려고 한다.
환경구성 hexo설치와 git설치는 되어있다고 가정. 먼저 구성할 폴더를 생성하고 이 폴더에 hexo 환경을 구성하겠다고 초기 셋팅을 한다
mkdir blog hexo init blog 그리고 hexo환경을 저장해둔 repository를 가져와야 하므로 git설정을 한다</description></item><item><title>hexo + github + blog 연동하기</title><link>https://taetaetae.github.io/2016/09/18/hexo_github_blog/</link><pubDate>Sun, 18 Sep 2016 15:38:34 +0000</pubDate><author>Author</author><guid>https://taetaetae.github.io/2016/09/18/hexo_github_blog/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/hexo_github_blog/hexo.jpg" referrerpolicy="no-referrer">
            </div>들어가기에 앞서 예전부터 블로그를 운영해야지 하구서 tistory, naver blog 등 다양한 플랫폼으로 시작을 했었지만 이렇다할 운영이 안되었고 사실 열정이 부족했었다. 직접 홈페이지를 만들기에는 너무 많은 허들이 있다보니 (서버구축, 호스팅, 도메인 등 &hellip;) 계속 차일피일 미루고 있었다. 그러다 github에서 제공하는 pages라는 걸 이용해서 무료로 도메인과 웹호스팅을 할수 있다는 부분을 알게되었고, 거기에다 jekyll을 이용하면 설치형 블로그를 운영할수 있다는것에 놀라웠다. 하지만 jekyll을 적용해보려고 이것저것 하다보니 ruby라는 언어로 만들어져있고 커스터마이징이 어렵다는 부분을 확인, 좀더 알아보다 hexo 라는 걸로 해당 블로그를 만들게 되었다.]]></description></item><item><title>첫번째 포스팅</title><link>https://taetaetae.github.io/2016/09/18/first/</link><pubDate>Sun, 18 Sep 2016 00:34:23 +0000</pubDate><author>Author</author><guid>https://taetaetae.github.io/2016/09/18/first/</guid><description>시작은 언제든지 새롭고 떨리고 가슴벅차는 순간이다. 과연 이 블로그를 잘 운영할수 있을런지.. 제대로 한번 관리 해보고, 나만의 공간으로 꾸며보자!</description></item></channel></rss>